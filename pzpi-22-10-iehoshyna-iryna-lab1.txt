Міністерство освіти і науки України
Харківський національний університет радіоелектроніки
Кафедра комп’ютерних наук






Звіт 
з лабораторної роботи №1
з предмету «Аналіз та рефакторинг коду»





Виконала:                                                                
ст. гр. ПЗПІ-22-10                                                       
Ірина Єгошина 

Перевірив:
Дашенков Д. С. 







Харків 2024
	Мета
	Опис  проєкту у форматі Vision & Scope. 
	Хід роботи
	Назва: «Програмна система для моніторінгу стану електроних пристроїв» HardMon.
	Опис  проєкту у форматі Vision & Scope можна переглянути у Додатку А.
	


Додаток А

Vision and Scope Document
for
Програмна система для моніторінгу стану електроних пристроїв – HardMon
Version 1.0 approved
Prepared by Єгошина Ірина Сегріївна
 HardMon Co.
05.10.2024
Table of Contents

Table of Contents	
Revision History	
1.	Business Requirements	1
1.1.	Background	1
1.2.	Business Opportunity	1
2.	Vision of the Solution	3
2.1.	Vision Statement	3
2.2.	Major Features	3
3.	Scope and Limitations	4
3.1.	Scope of Initial Release	4
3.2.	Scope of Subsequent Releases	4
4.	Business Context	6
4.3.	Operating Environment	6




Revision History

Name
Date
Reason For Changes
Version
Inception
05.11.2024
Creation
Version 1





1. Business Requirements
1.1. Background
	Проект «Програмна система для моніторінгу стану електроних пристроїв» HardMon з'явився у відповідь на зростаючу потребу компаній в моніторингу критичних параметрів електронних пристроїв для забезпечення їх стабільної та безпечної роботи. Збої в роботі, спричинені перегрівом, коливаннями вологості, неочікуваними змінами у споживанні електроенергії та іншими факторами, можуть призвести до значних втрат для бізнесу, включаючи пошкодження обладнання та непередбачені витрати. Зважаючи на зростаючу кількість IoT-пристроїв, постала потреба в універсальній системі, яка дозволить компаніям контролювати стан їхніх пристроїв у режимі реального часу та своєчасно отримувати попередження про потенційно небезпечні ситуації.
1.2. Business Opportunity
	Ринок IoT та систем моніторингу активно розвивається, зокрема зростає попит на рішення, які дозволяють контролювати стан обладнання та забезпечувати профілактику збоїв. В умовах жорсткої конкуренції компанії шукають можливість зменшити ризики втрат через несправності обладнання, а також підвищити ефективність його використання.
	На ринку вже існує низка рішень для моніторингу обладнання, кожне з яких має свої особливості та функціональні можливості. Серед відомих аналогів можна виділити:
   • Paessler PRTG Network Monitor: спеціалізоване програмне забезпечення для моніторингу мереж і серверів. Включає в себе широкий спектр інструментів для відстеження стану обладнання, але його інтеграція вимагає значних технічних ресурсів і підтримки.
   • Zabbix: популярна система моніторингу відкритого коду, що дозволяє відслідковувати широкий спектр метрик у мережах та серверному обладнанні. Підходить для великих компаній, але потребує налаштування та не завжди є зручною для користувачів, що шукають простий інтерфейс для управління IoT-пристроями.
   • Nagios: моніторингова платформа з потужною підтримкою кастомізації, але основний акцент зроблено на мережевих параметрах. Підтримка IoT-пристроїв обмежена, а налаштування системи може бути складним для не технічних користувачів.
	HardMon прагне виділитися серед аналогів, забезпечуючи простоту налаштування та використання. Система пропонує інтеграцію для моніторингу різних типів IoT-пристроїв з інтуїтивним інтерфейсом для керування пристроями та швидким сповіщенням через мобільний додаток.
Способи монетизації проєкту
		Для монетизації проекту HardMon можуть використовуватися наступні підходи:
   • Модель підписки: щомісячна або річна підписка на використання платформи, з урахуванням різних пакетів залежно від кількості моніторингових пристроїв і рівня функціональності.
   • Додаткові платні функції: наприклад, розширений аналіз даних, прогнозування відмов, доступ до аналітики та звітів.
   • Плата за розробку індивідуальних рішень: якщо клієнту потрібне додаткове налаштування або моніторинг нестандартних параметрів для специфічних пристроїв.
		Завдяки таким підходам, HardMon зможе відповідати потребам як малого, так і великого бізнесу, забезпечуючи їм доступну і гнучку платформу для моніторингу критичних параметрів обладнання.




2. Vision of the Solution
2.1. Vision Statement
	«Програмна система для моніторінгу стану електроних пристроїв» HardMon — це універсальна система моніторингу стану електронних пристроїв, призначена для забезпечення стабільної роботи та безпеки обладнання через моніторинг ключових параметрів у режимі реального часу. Метою HardMon є створення середовища, де бізнес може безперервно стежити за станом своїх пристроїв, вчасно отримувати сповіщення про потенційні збої та вживати заходів для запобігання аварійним ситуаціям.
	Система орієнтована на задоволення потреб різних категорій користувачів, зокрема тих, хто використовує серверне обладнання, системи IoT або будь-які критично важливі для бізнесу пристрої. HardMon допомагає компаніям оптимізувати використання обладнання, знижувати витрати на його обслуговування та покращувати надійність роботи за рахунок своєчасного виявлення відхилень від норми.
2.2. Major Features
	Основні функціональні можливості системи HardMon включають:
   1. Моніторинг у режимі реального часу: система відстежує основні параметри пристроїв (температура, вологість, енергоспоживання тощо) і надає актуальні дані для перегляду в реальному часі.
   2. Інтеграція з IoT-пристроями: можливість підключення та налаштування різноманітних IoT-пристроїв для контролю показників та їхньої обробки.
   3. Гнучке налаштування порогів параметрів: користувачі можуть встановлювати індивідуальні норми для кожного з параметрів, а система буде надсилати сповіщення при їх перевищенні.
   4. Система сповіщень про відхилення від норми: мобільний додаток надсилає повідомлення про аварійні ситуації або будь-яке порушення налаштувань, що дозволяє користувачеві оперативно реагувати на можливі проблеми.
   5. Централізоване управління пристроями: додавання та управління пристроями здійснюється через веб-платформу, де можна переглядати, налаштовувати параметри і вводити допустимі норми для кожного підключеного пристрою.
   6. Аналіз даних та звітність: система пропонує інструменти для аналізу історичних даних, формування звітів та статистики по всім підключеним пристроям, що дозволяє користувачам отримати уявлення про роботу обладнання в довгостроковій перспективі.
   7. Можливість кастомізації під потреби клієнта: користувачі можуть запросити додавання нових типів пристроїв або налаштування нових параметрів для моніторингу відповідно до специфічних вимог бізнесу.
	Завдяки цим функціям HardMon дозволяє компаніям ефективно управляти своїм обладнанням, знижуючи ризики, підвищуючи надійність роботи та зменшуючи витрати на підтримку та ремонт.

3. Scope and Limitations
3.1. Scope of Initial Release
	Серверна частина
   • Збір та обробка даних: серверна частина приймає інформацію з підключених IoT-пристроїв, обробляє її і зберігає в базі даних. Всі зібрані параметри, такі як температура, вологість, рівень споживання енергії тощо, передаються на сервер для аналізу.
   • Аналіз відхилень: сервер обробляє отримані дані та перевіряє їх відповідність встановленим порогам для кожного пристрою. Якщо параметри виходять за встановлені межі, сервер формує сповіщення про аварійну ситуацію для подальшої передачі на мобільний додаток.
   • Зберігання даних: забезпечує тривале зберігання даних для подальшого аналізу і формування звітів. Це дозволяє користувачам бачити динаміку змін параметрів обладнання.
   • Інтерфейс для API: надає API для обміну даними з іншими частинами системи, зокрема з мобільним і веб-клієнтами, дозволяючи інтегрувати HardMon з іншими сервісами клієнта.
	IoT-клієнт
   • Збір даних з датчиків: IoT-клієнт встановлюється на пристрій, відстежує та збирає дані з датчиків. Це можуть бути сенсори температури, вологості, рівня енергоспоживання та інші.
   • Передача даних на сервер: IoT-клієнт відправляє зібрані параметри на сервер для подальшої обробки і зберігання.
   • Можливість оновлення налаштувань: підтримує отримання нових налаштувань від сервера, наприклад, зміна порогових значень або частоти збирання даних.
3.2. Scope of Subsequent Releases
	Веб-клієнт
   • Панель управління пристроями: веб-клієнт надає інтерфейс для додавання, видалення та налаштування пристроїв, що підлягають моніторингу. Користувач може переглядати список підключених пристроїв, перевіряти їх стан та налаштовувати порогові значення для кожного параметра.
   • Налаштування граничних значень: дозволяє встановлювати індивідуальні порогові значення для параметрів кожного пристрою. Такі налаштування відправляються на сервер і застосовуються до пристроїв через IoT-клієнти.
   • Аналіз та звітність: веб-клієнт надає інструменти для формування звітів на основі історичних даних, які зберігаються на сервері. Користувач може переглядати аналітику та виявляти тенденції у зміні параметрів для покращення роботи пристроїв.
   • Інтерфейс для керування користувачами: система підтримує різні рівні доступу до даних і функцій системи, що дозволяє адмініструвати ролі та доступи для різних користувачів.
	Мобільний клієнт
   • Отримання сповіщень: мобільний додаток отримує та відображає сповіщення про аварійні ситуації, якщо якийсь параметр перевищує допустимі значення. Користувач отримує інформацію в режимі реального часу про стан обладнання.
   • Огляд стану пристроїв: додаток надає користувачам можливість переглядати загальний стан пристроїв, відстежувати поточні показники та отримувати загальну інформацію про кожен підключений пристрій.
	Система HardMon буде розвиватися поетапно. Основний функціонал для початкового випуску включатиме обробку критичних даних і сповіщення, що забезпечить основні потреби клієнтів у моніторингу. У майбутніх релізах буде додана розширена аналітика, функціональність для кастомізації під специфічні пристрої та гнучкі інструменти звітності для бізнесу.


4. Business Context
4.3. Operating Environment
		У проекті HardMon зацікавлені наступні сторони:
   • Кінцеві користувачі: компанії, які використовують електронне обладнання та IoT-пристрої для критично важливих завдань, наприклад, серверні оператори, виробничі підприємства, логістичні компанії.
   • Інтегратори IoT-рішень: компанії, що спеціалізуються на встановленні IoT-систем для бізнесів, яким потрібні інструменти для моніторингу стану обладнання.
   • Власники бізнесу: мають інтерес у зниженні витрат на обслуговування, підвищенні надійності обладнання та уникненні збоїв, що призводять до простоїв.
   • Менеджери проєкту та технічний персонал: відповідальні за розробку, тестування і впровадження системи, зацікавлені у створенні ефективного рішення з високою продуктивністю та надійністю.
   • Інвестори: можуть бути зацікавлені у подальшому розвитку та монетизації продукту, прагнуть отримати максимальну віддачу від інвестицій.
		Проект розбитий на декілька етапів:
• Етап 1: Планування та дизайн — 1 місяць.
• Етап 2: Розробка серверної частини та IoT-клієнта — 2 місяці.
• Етап 3: Розробка веб-клієнта додатка — 2 місяці.
• Етап 4: Розробка мобільного додатка — 3 місяці.
• Етап 5: Тестування та налагодження — 2 місяці.
• Етап 6: Реліз та технічна підтримка — постійна.
		Загалом, реалізація проекту планується протягом 10 місяців, з можливістю подальшого розвитку та оновлень.
		Проект HardMon використовуватиме такі технології та інструменти для забезпечення його функціональності та стабільності:
   • Серверна частина:
   o Мова програмування: C#  для бекенду, що забезпечує обробку даних і аналітику.
   o Бази даних: MS SQL для зберігання даних про пристрої, показники та історію.
   o API: RESTful API для взаємодії з веб- і мобільним клієнтами, а також IoT-клієнтами.
   • IoT-клієнт:
   o Протокол передачі даних: TCP/IP  – протокол, оптимізований для малопотужних пристроїв, що забезпечує надійну та швидку передачу даних між Arduino-пристроями та сервером.
   o Мова програмування: C/C++ для ефективної роботи на платформі Arduino з обмеженими обчислювальними ресурсами.
   o Засоби обробки даних: алгоритми первинної обробки даних вбудовані в код Arduino, що дозволяє здійснювати початковий аналіз зібраних даних з сенсорів (наприклад, усереднення значень, фільтрація шуму) перед відправкою на сервер.
   • Веб-клієнт:
   o Фронтенд технології: VUE.JS  для забезпечення інтерактивного інтерфейсу.
   • Мобільний клієнт:
   o Мова програмування: C# або Kotlin для розробки додатків на  Android.
   o Інтеграція з REST API для отримання актуальних даних про стан пристроїв у режимі реального часу.
		Вимоги до операційного середовища:
   • Безперервність роботи: система повинна бути доступною 24/7 без значних простоїв, оскільки користувачі покладаються на неї для моніторингу критичних показників.
   • Безпека даних: необхідно забезпечити шифрування даних при передачі та зберіганні, а також контроль доступу до конфіденційної інформації користувачів.
		Такі інструменти та підходи дозволять створити стабільне, безпечне і ефективне середовище для роботи системи HardMon, відповідаючи потребам бізнесу та забезпечуючи комфорт для користувачів.

